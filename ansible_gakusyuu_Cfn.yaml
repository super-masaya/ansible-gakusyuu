AWSTemplateFormatVersion: '2010-09-09'
Description: Ansible Test Environment with Master and Target EC2 Instances (SSH Key Auth) for Ireland (eu-west-1)

Parameters:
  MyIpAddress:
    Description: "Your current global IP address (e.g., 1.2.3.4/32). Used as the allowed source IP for SSH. Please enter this when creating the CloudFormation stack."
    Type: String
  KeyPairName:
    Description: "The name of an existing key pair to use for SSH access to the EC2 instances. Please select this when creating the CloudFormation stack."
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  # --- VPC and Networking ---
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Ansible-VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: Ansible-PublicSubnet

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Ansible-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Ansible-PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # --- Security Groups ---
  AnsibleMasterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AnsibleMasterSG
      GroupDescription: Allow SSH from My IP to Ansible Master (for ec2-user)
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIpAddress # For ec2-user access
      Tags:
        - Key: Name
          Value: AnsibleMaster-SG

  AnsibleTargetSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AnsibleTargetSG
      GroupDescription: Allow SSH from fixed private IPs
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.1.100/32
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 10.0.1.100/32
      Tags:
        - Key: Name
          Value: AnsibleTarget-SG

  # --- EC2 Instances ---
  AnsibleMasterInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyPairName # For ec2-user access
      ImageId: !FindInMap [AWSRegionArch2AMIName, !Ref "AWS::Region", !FindInMap [AWSInstanceType2Arch, "t3.micro", Arch]]
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          PrivateIpAddress: 10.0.1.100
          GroupSet:
            - !Ref AnsibleMasterSecurityGroup
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: Ansible_Master

  AnsibleDevTarget1Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyPairName # For ec2-user access
      ImageId: !FindInMap [AWSRegionArch2AMIName, !Ref "AWS::Region", !FindInMap [AWSInstanceType2Arch, "t3.micro", Arch]]
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          PrivateIpAddress: 10.0.1.101
          GroupSet:
            - !Ref AnsibleTargetSecurityGroup
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: Ansible_Dev_Target1

  AnsibleDevTarget2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap [AWSRegionArch2AMIName, !Ref "AWS::Region", !FindInMap [AWSInstanceType2Arch, "t3.micro", Arch]]
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          PrivateIpAddress: 10.0.1.102
          GroupSet: [!Ref AnsibleTargetSecurityGroup]
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: Ansible_Dev_Target2

  AnsibleTestTarget1Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap [AWSRegionArch2AMIName, !Ref "AWS::Region", !FindInMap [AWSInstanceType2Arch, "t3.micro", Arch]]
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          PrivateIpAddress: 10.0.1.103
          GroupSet: [!Ref AnsibleTargetSecurityGroup]
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: Ansible_Test_Target1

  AnsibleTestTarget2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap [AWSRegionArch2AMIName, !Ref "AWS::Region", !FindInMap [AWSInstanceType2Arch, "t3.micro", Arch]]
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          PrivateIpAddress: 10.0.1.104
          GroupSet: [!Ref AnsibleTargetSecurityGroup]
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: Ansible_Test_Target2

Mappings:
  AWSInstanceType2Arch:
    "t3.micro": { "Arch": "HVM64" }
    # Add other instance types if you use them, ensure "Arch" value is correct (e.g., "HVMG2" for Graviton)
  AWSRegionArch2AMIName:
    "us-east-1":    { "HVM64": "ami-064ff912f78e3e561" } # Example for N. Virginia AL2023
    "ap-northeast-1": { "HVM64": "ami-090898f63ea58fde0" } # Example for Tokyo AL2023
    "eu-west-1":    { "HVM64": "ami-03d8b47244d950bbb" } # Your AMI for Ireland (Amazon Linux 2023)
    # Add other regions and their AL2023 AMI IDs as required.
    # To find AMIs: EC2 Console -> AMIs -> Public images -> Search "al2023-ami-2023" owner "amazon"

Outputs:
  AnsibleMasterPublicIP:
    Description: Public IP address of the Ansible Master server (for ec2-user SSH)
    Value: !GetAtt AnsibleMasterInstance.PublicIp
  HowToGetAnsibleMasterPublicKey:
    Description: "Login to Master as ec2-user and run 'sudo cat /home/ansible/.ssh/id_rsa.pub' OR check EC2 System Log for AnsibleMasterInstance."
    Value: "See description."
  # Add outputs for target instance IPs if needed for initial ec2-user login.